rules_version = '2';
service cloud.firestore {
	function isAuthenticated() {
		return request.auth != null;
	}

	match /databases/{database}/documents {
		// gear
		match /gear/{gearID} {
			allow create: if isAuthenticated() && request.resource.data.role[request.auth.uid] == 'owner';
			allow read, update, delete: if resource.data.role[request.auth.uid] == 'owner';
		}
		
		// user gears
		match /userGears/{userID} {
			allow create: if isAuthenticated() && userID == request.auth.uid;
			allow read, update, delete: if userID == request.auth.uid;
		}
		
		// trip
		match /trip/{tripID} {
			allow create: if isAuthenticated() && request.resource.data.role[request.auth.uid] == 'owner';
			allow read, update, delete: if resource.data.role[request.auth.uid] == 'owner';
		}
		
		// trip share, only admin is allowed to write
		match /tripShare/{tripID} {
			allow read: if true;
			allow create, update, delete: if false;
		}
		
		// trip meta, only admin is allowed to write
		match /tripMeta/{tripID} {
			allow read: if true;
			allow create, update, delete: if false;
		}
		
		// user meta
		match /userMeta/{userID} {
			allow create, read, update, delete: if isAuthenticated() && userID == request.auth.uid;
		}
	}
}
